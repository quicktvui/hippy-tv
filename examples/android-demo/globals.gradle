// region 仓库配置
def static addRepository(RepositoryHandler handler) {
  handler.mavenLocal()
  handler.maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
  handler.maven { url 'http://4thline.org/m2' }

  handler.maven { url 'https://dl.bintray.com/umsdk/release' }
  handler.jcenter()
  handler.google()
}

ext.addRepository = this.&addRepository
// endregion

//region 编译配置
static def gitVersion() {
  def cmd = 'git rev-list HEAD --count'
  def commit_head = cmd.execute().text.trim()
  commit_head.length() == 0 ? '1' : commit_head.toInteger()
}

def global = [:]
ext.global = global
global.gradle_ver = '4.2.1'
global.kotlin_ver = '1.3.72'
global.novoda_ver = '0.9.2'
global.min_sdk = 14
global.compile_sdk = 29
global.build_tool = '29.0.3'
global.target_sdk = 19
global.version_code = gitVersion()
global.version_name = "1.0.${global.version_code}"
global.sdk_use_from = ''  // aar maven 不填会引用project

println("versionCode is " + global.version_code + " versionName is " + global.version_name)
//endregion

//region 依赖项
def dps = [:]
ext.dps = dps

//classpath
def classpath = [:]
dps.classpath = classpath
classpath.gradle = "com.android.tools.build:gradle:${global.gradle_ver}"
classpath.kotlin = "org.jetbrains.kotlin:kotlin-gradle-plugin:${global.kotlin_ver}"
classpath.novoda = "com.novoda:bintray-release:${global.novoda_ver}"

// kotlin
def kotlin = [:]
dps.kotlin = kotlin
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:${global.kotlin_ver}"
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib:${global.kotlin_ver}"

// androidx
def androidx = [:]
dps.androidx = androidx
androidx.multidex = 'androidx.multidex:multidex:2.0.1'
androidx.core = 'androidx.core:core-ktx:1.3.0'
androidx.appcompat = 'androidx.appcompat:appcompat:1.2.0'
androidx.constraintlayout = 'androidx.constraintlayout:constraintlayout:1.1.0'
androidx.recyclerview = 'androidx.recyclerview:recyclerview:1.2.1'
androidx.annotation = 'androidx.annotation:annotation:1.1.0'
androidx.collection = 'androidx.collection:collection:1.1.0'
androidx.room_runtime = 'androidx.room:room-runtime:2.2.5'
androidx.room_test = 'androidx.room:room-testing:2.2.5'
androidx.room_compiler = 'androidx.room:room-compiler:2.2.5'
androidx.life_viewmodel = 'androidx.lifecycle:lifecycle-viewmodel:2.2.0'
androidx.life_livedata = 'androidx.lifecycle:lifecycle-livedata:2.2.0'
androidx.life_compiler = 'androidx.lifecycle:lifecycle-compiler:2.2.0' // kapt
androidx.localbroadcastmanager = 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'

// support
def support = [:]
dps.support = support
support.v4 = 'com.android.support:support-v4:25.3.1'

// bugly
def bugly = [:]
dps.bugly = bugly
bugly.upgrade = 'com.tencent.bugly:crashreport:2.8.6'
bugly.upgrade_tinker = 'com.tencent.bugly:crashreport_upgrade:1.3.4'
bugly.report = 'com.tencent.bugly:nativecrashreport:3.6.0.1'

// glide
def glide = [:]
dps.glide = glide
glide.runtime = "com.github.bumptech.glide:glide:4.8.0"
glide.compiler = "com.github.bumptech.glide:compiler:4.8.0"

// Squareup
def squareup = [:]
dps.squareup = squareup
squareup.okhttp = 'com.squareup.okhttp3:okhttp:3.12.12' // 不能高于此版本，会影响minsdk19
squareup.okhttp_log = 'com.squareup.okhttp3:logging-interceptor:3.12.1'
squareup.retrofit = 'com.squareup.retrofit2:retrofit:2.6.4'
squareup.adapter_rxjava2 = 'com.squareup.retrofit2:adapter-rxjava2:2.6.4'
squareup.converter_gson = 'com.squareup.retrofit2:converter-gson:2.6.4'
squareup.okio = 'com.squareup.okio:okio:1.15.0'

// Umeng
def umeng = [:]
dps.umeng = umeng
umeng.common = 'com.umeng.umsdk:common:2.0.0'
umeng.analytics = 'com.umeng.umsdk:analytics:8.0.0'

// Leancloud
def leancloud = [:]
dps.leancloud = leancloud
leancloud.sdk_3x = 'cn.leancloud.android:avoscloud-sdk:v3.16.4'
leancloud.push_3x = 'cn.leancloud.android:avoscloud-push:v3.16.4'
leancloud.sdk_4x = 'cn.leancloud.android:avoscloud-sdk:4.7.12'
leancloud.push_4x = 'cn.leancloud.android:avoscloud-push:4.7.12'


// Utils
def utils = [:]
dps.utils = utils
utils.utilcode = 'com.blankj:utilcode:1.28.1'
utils.mmkv = 'com.tencent:mmkv:1.0.22'
utils.eventbus = 'org.greenrobot:eventbus:3.1.1'
utils.zxing = 'com.google.zxing:core:3.3.2'

// hili
def hl = [:]
dps.hl = hl
hl.gson = 'com.hiliad:gson:1.0.3'
hl.mp_cling = 'com.hili.sdk.mp:cling:1.0.1'
hl.mp_common = 'com.hili.sdk.mp:common:1.0.5'
hl.mp_client = 'com.hili.sdk.mp:client:1.0.5'
hl.mp_hp = 'com.hili.sdk.mp:hp:1.0.5'
hl.mp_server = 'com.hili.sdk.mp:server:1.0.7'
hl.mp_img_loader_glide = 'com.hili.sdk.mp:img-loader-glide:1.0.4'

dps.player_manager = 'tvkit:player-manager:1.0.3645-SNAPSHOT'



//endregion
